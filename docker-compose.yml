networks:
  private:
    driver: bridge
  public:
    driver: bridge
  mtg-network:
    name: mtg-network
    driver: bridge

services:
  postgres:
    container_name: mtg-postgis
    image: postgis/postgis:13-3.5
    shm_size: 5G
    command:
      - postgres
      - "-c" 
      - "shared_buffers=2GB"                     # Memória reservada para caching de dados
      - "-c" 
      - "effective_cache_size=4GB"               # Sugestão para otimização do planner
      - "-c"
      -  "work_mem=64MB"                          # Memória para operações de ordenação/hash
      - "-c"
      -  "maintenance_work_mem=512MB"             # Memória para operações de manutenção (vacuum, etc)
      - "-c"
      -  "checkpoint_completion_target=0.9"
      - "-c"
      -  "wal_buffers=16MB"
      - "-c"
      -  "default_statistics_target=200"
      - "-c"
      -  "synchronous_commit=off"                 # Desativa fsync para melhorar performance (cuidado com consistência)
      - "-c"
      -  "autovacuum_vacuum_cost_delay=20ms"
      - "-c"
      -  "autovacuum_vacuum_cost_limit=200"
      - "-c"
      -  "max_parallel_workers=4"
      - "-c"
      -  "max_parallel_workers_per_gather=2"
      - "-c" 
      - "log_min_duration_statement=500"         # Loga queries que duram mais de 500ms
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - mtg-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 10s

volumes:
  pg_data:
    driver: local
